# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Romolo Marotta
# This file is distributed under the same license as the Sistemi Operativi package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sistemi Operativi \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-21 22:14+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/examples/pvst.rst:6
msgid "PVST - Processi vs Thread"
msgstr ""

#: ../source/examples/pvst.rst:61
msgid "Processi vs Thread (:raw-html:`<a class=\"external\" href=\"https://github.com/SistemiOperativi/c_examples/blob/main/pvst/pvst.c\">PVST</a> <a class=\"fa fa-github external\" href=\"https://github.com/SistemiOperativi/c_examples/blob/main/pvst/pvst.c\"></a>`) è un programma C il cui scopo è quello di evidenziare differenze basilari tra processi e thread."
msgstr ""

#: ../source/examples/pvst.rst:66
msgid "Il programma è diviso in due sezioni:"
msgstr ""

#: ../source/examples/pvst.rst:68
msgid "il main thread crea un thread child secondo lo schema proposto in :doc:`PFEW <pfew>`. Entrambi i thread scrivono sulla variabile globlale :code:`global_var` e successivamente ne stampano il valore su standard output."
msgstr ""

#: ../source/examples/pvst.rst:69
msgid "il main thread crea un processo child secondo lo schema proposto in :doc:`FEW <few>`. Entrambi i thread scrivono sulla variabile globlale :code:`global_var` e successivamente ne stampano il valore su standard output."
msgstr ""

#: ../source/examples/pvst.rst:71
msgid "La variabile :code:`global_var` viene stampata 4 volte, rispettivamente"
msgstr ""

#: ../source/examples/pvst.rst:None
msgid "Domanda"
msgstr ""

#: ../source/examples/pvst.rst:100
msgid "Cosa stampano le righe 18, 36, 42 e 46?"
msgstr ""
