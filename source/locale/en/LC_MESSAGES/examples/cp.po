# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Romolo Marotta
# This file is distributed under the same license as the Sistemi Operativi
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sistemi Operativi \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-16 03:05+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../source/examples/cp.rst:5
msgid "CoPy"
msgstr ""

#: ../source/examples/cp.rst:8
msgid ""
":raw-html:`<a class=\"external\" target=\"_blank\" "
"href=\"https://github.com/SistemiOperativi/c_examples/blob/main/cp/cp.c\">CoPy</a>"
" <a class=\"fa fa-github external\" target=\"_blank\" "
"href=\"https://github.com/SistemiOperativi/c_examples/blob/main/cp/cp.c\"></a>`"
" è un programma C il cui obiettivo è mostrare l'utilizzo di alcuni "
"servizi per la gestione di file."
msgstr ""
":raw-html:`<a class=\"external\" target=\"_blank\" "
"href=\"https://github.com/SistemiOperativi/c_examples/blob/main/cp/cp.c\">CoPy</a>"
" <a class=\"fa fa-github external\" target=\"_blank\" "
"href=\"https://github.com/SistemiOperativi/c_examples/blob/main/cp/cp.c\"></a>`"
" is a C program that shows usage of several syscalls for file management."

#: ../source/examples/cp.rst:58
msgid ""
"Il programma prende da riga di comando il file da copiare ed il file "
"destinazione. Lo schema è il seguente:"
msgstr ""
"The program takes the source and destination file names from command "
"line, and it is structured as the following:"

#: ../source/examples/cp.rst:61
msgid "apre il file di input in lettura utilizzando il flag O_RDONLY (riga 18)"
msgstr ""
"it opens the source file in read-only mode by using the flag 0_RDONLY "
"(line 18)"

#: ../source/examples/cp.rst:62
msgid ""
"crea ed apre il file di output in sola scrittura tramite i flag O_CREAT e"
" O_WRONLY, e, se già esistente, ne cancella il contenuto grazie al flag "
"O_TRUNC (riga 22)"
msgstr ""
"it creates and opens the destination file in write-only mode by using "
"O_CREAT and O_WRONLY flags. If the file is already present, it erases its"
" content thanks to the O_TRUNC flag (line 22)"

#: ../source/examples/cp.rst:63
msgid "legge al più BUFSIZE byte su un buffer (riga 27)"
msgstr "it reads up to BUFSIZE bytes to a memory buffer (line 27)"

#: ../source/examples/cp.rst:64
msgid "utilizza il suddetto buffer per la scrittura su file di output (riga 34)"
msgstr ""
"it uses the buffer as source operand for writing on the destination file "
"(line 34)"

#: ../source/examples/cp.rst:65
msgid ""
"una volta letto e copiato tutto il file (riga 45) vengono chiusi i "
"relativi file descriptor (riga 40 e 41)"
msgstr ""
"when the whole file has been read and copied (line 45), it closes their "
"respective file descriptor (lines 40 and 41)"

#: ../source/examples/cp.rst:69
msgid ""
"Il codice mostrato è affetto da una problematica relativa alla fase di "
"scrittura. Nello specifico, è possibile che il programma termini "
"correttamente senza però aver effettuato una corretta copia del file."
msgstr ""
"The code is affected by an anomaly during the writing phase. In "
"particular,it is possible that the program terminates correctly even "
"though the file has not been copied correctly."

#: ../source/examples/cp.rst:74
msgid "In quali scenari il programma presenta la suddetta anomalia?"
msgstr "What are the scenarios that might lead to the anomaly?"

#: ../source/examples/cp.rst:75
msgid "Come prevenirla?"
msgstr "How can the anomaly be prevented?"

#: ../source/examples/cp.rst:82
msgid "Riferimenti"
msgstr "References"

#: ../source/examples/cp.rst:84
msgid ":posix:`open <open>`"
msgstr ""

#: ../source/examples/cp.rst:85
msgid ":posix:`read <read>`"
msgstr ""

#: ../source/examples/cp.rst:86
msgid ":posix:`write <write>`"
msgstr ""

#: ../source/examples/cp.rst:87
msgid ":posix:`close <close>`"
msgstr ""

