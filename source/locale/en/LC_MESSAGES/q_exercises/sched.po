# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Romolo Marotta
# This file is distributed under the same license as the Sistemi Operativi
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Sistemi Operativi \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-01-17 15:07+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../source/q_exercises/sched.rst:2
msgid "3 - Scheduling"
msgstr ""

#: ../source/q_exercises/sched.rst:3
msgid ""
"Si consideri uno scenario con 4 processi {P1,..., P4} CPU-bound e "
"generati in sequenza a partire da P1 a P4 con ritardi trascurabili. Il "
"processo Pi richiede 1/i secondi di CPU per completare la propria "
"esecuzione. Considerando che il ritardo di context-switch sia "
"trascurabile e che RR abbia una time slice pari a 125ms, si calcoli per "
"gli algoritmi FCFS, SPN e RR il tempo di primo accesso alla CPU e il "
"tempo di completamento per ciascun processo."
msgstr ""

#: ../source/q_exercises/sched.rst:6
msgid ""
"Si consideri uno scenario in cui uno scheduler Multilevel-feedback queue "
"abbia 4 livelli di priorità, ed in cui il quanto di tempo assegnato ai "
"processi al livello i sia di 1/2^i millicondo. Si supponga che "
"all'istante T0 nascano 2 processi A e B, entrambi CPU-bound. Il processo "
"B richiede 10 millisecondi di tempo di CPU per completare la sua "
"esecuzione. Si identifichi la durata massima (in termini di tempo di CPU)"
" del processo A affinché il processo B possa completare la sua esecuzione"
" entro il tempo T0+17 nei due casi in cui il primo processo ad essere "
"schedulato in CPU sia A oppure B. Si supponga che il tempo di CPU per i "
"context switch e per l'esecuzione dello scheduler sia nullo."
msgstr ""

#: ../source/q_exercises/sched.rst:7
msgid ""
"Si consideri uno scenario in cui al tempo T0 nasca un processo P0 "
"puramente CPU-bound di durata (tempo di CPU) pari a 10 secondi ed al "
"tempo T0 + 3 secondi P0 origini un altro processo P1 puramente CPU-bound "
"di durata (tempo di CPU) pari a 6 secondi. Supponendo che le durate dei "
"processi siano note al tempo della loro generazione, e che il tempo di "
"CPU per eseguire uno scheduler sia trascurabile. si calcoli il tempo "
"massimo di completamento del processo P1 nel caso in cui il sistema abbia"
" come scheduler Shortest Process Next oppure Shortest-Remaining-Time "
"Next."
msgstr ""

#~ msgid ""
#~ "Si consideri uno scenario con 4 "
#~ "processi {P1,..., P4} CPU-bound e "
#~ "generati in sequenza a partire da "
#~ "P1 a P4 con ritardi trascurabili. "
#~ "Le cui richieste di uso della CPU"
#~ " per completare la loro esecuzione "
#~ "sono tali che Pi richiede 1/i sec."
#~ " Considerando che il ritardo di "
#~ "context-switch sia trascurabile e che "
#~ "RR abbia una time slice pari a "
#~ "125ms, si calcoli per gli algoritmi "
#~ "FCFS, SPN e RR il tempo di "
#~ "primo accesso alla CPU e il tempo"
#~ " di completamento per ciascun processo."
#~ msgstr ""

#~ msgid ""
#~ "Si consideri uno scenario con 4 "
#~ "processi {P1,..., P4} CPU-bound e "
#~ "generati in sequenza a partire da "
#~ "P1 a P4 con ritardi trascurabili. "
#~ "Il processo Pi richiede 1/i secondi "
#~ "di CPU per completare la propria "
#~ "esecuzione. Considerando che il ritardo "
#~ "di context-switch sia trascurabile e "
#~ "che RR abbia una time slice pari"
#~ " a 125ms, si calcoli per gli "
#~ "algoritmi FCFS, SPN e RR il tempo"
#~ " di primo accesso alla CPU e il"
#~ " tempo di completamento per ciascun "
#~ "processo."
#~ msgstr ""

#~ msgid ""
#~ "#. Si consideri uno scenario con 4"
#~ " processi {P1,..., P4} CPU-bound e"
#~ " generati in sequenza a partire da"
#~ " P1 a P4 con ritardi trascurabili."
#~ " Il processo Pi richiede 1/i secondi"
#~ " di CPU per completare la propria "
#~ "esecuzione. Considerando che il ritardo "
#~ "di context-switch sia trascurabile e "
#~ "che RR abbia una time slice pari"
#~ " a 125ms, si calcoli per gli "
#~ "algoritmi FCFS, SPN e RR il tempo"
#~ " di primo accesso alla CPU e il"
#~ " tempo di completamento per ciascun "
#~ "processo. #. Si consideri uno scenario"
#~ " in cui uno scheduler Multilevel-"
#~ "feedback queue abbia 4 livelli di "
#~ "priorità, ed in cui il quanto di"
#~ " tempo assegnato ai processi al "
#~ "livello i sia di 1/2^i millicondo. "
#~ "Si supponga che all'istante T0 nascano"
#~ " 2 processi A e B, entrambi "
#~ "CPU-bound. Il processo B richiede 10"
#~ " millisecondi di tempo di CPU per "
#~ "completare la sua esecuzione. Si "
#~ "identifichi la durata massima (in "
#~ "termini di tempo di CPU) del "
#~ "processo A affinché il processo B "
#~ "possa completare la sua esecuzione entro"
#~ " il tempo T0+17 nei due casi in"
#~ " cui il primo processo ad essere "
#~ "schedulato in CPU sia A oppure B."
#~ " Si supponga che il tempo di "
#~ "CPU per i context switch e per "
#~ "l'esecuzione dello scheduler sia nullo. "
#~ "#. Si consideri uno scenario in "
#~ "cui al tempo T0 nasca un processo"
#~ " P0 puramente CPU-bound di durata "
#~ "(tempo di CPU) pari a 10 secondi"
#~ " ed al tempo T0 + 3 secondi "
#~ "P0 origini un altro processo P1 "
#~ "puramente CPU-bound di durata (tempo "
#~ "di CPU) pari a 6 secondi. "
#~ "Supponendo che le durate dei processi"
#~ " siano note al tempo della loro "
#~ "generazione, e che il tempo di CPU"
#~ " per eseguire uno scheduler sia "
#~ "trascurabile. si calcoli il tempo "
#~ "massimo di completamento del processo P1"
#~ " nel caso in cui il sistema "
#~ "abbia come scheduler Shortest Process "
#~ "Next oppure Shortest-Remaining-Time "
#~ "Next."
#~ msgstr ""

